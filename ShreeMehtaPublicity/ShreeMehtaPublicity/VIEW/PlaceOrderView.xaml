<Window x:Class="ShreeMehtaPublicity.VIEW.PlaceOrderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:VIEWMODEL="clr-namespace:ShreeMehtaPublicity.VIEWMODEL" 
             xmlns:xceed="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             SizeToContent="WidthAndHeight"
             xmlns:utility="clr-namespace:ShreeMehtaPublicity.Utility"
             Name="PlaceOrderWindow" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" WindowStyle="None" ShowInTaskbar="False"
             FocusManager.FocusedElement="{Binding ElementName=CloseButton}"
             TextOptions.TextRenderingMode="Auto" TextOptions.TextFormattingMode="Ideal"
             TextElement.FontSize="13" TextElement.FontWeight="Regular" FontFamily="{DynamicResource MaterialDesignFont}"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}" BorderBrush="{x:Null}" BorderThickness="0">

    <Window.Resources>
        <utility:AmountValidator x:Key="AmountValidator"/>
    </Window.Resources>
    
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding CloseCommand}" />
    </Window.InputBindings>

    <StackPanel Orientation="Horizontal" Background="Transparent">
        <Border BorderBrush="{StaticResource WindowTitleColorBrush}" BorderThickness="3" Name="AddOrderForm">
            <Grid Width="500" Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Background="{StaticResource WindowTitleColorBrush}">
                    <TextBlock Text="{Binding ActionLable}" Style="{StaticResource AddWindowTitle}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Command="{Binding CloseCommand}" Style="{StaticResource AddCloseButton}">
                        <material:PackIcon Kind="CloseBoxOutline" Height="20" Width="20"/>
                    </Button>
                </StackPanel>

                <StackPanel Grid.Row="1">
                    <Grid Background="Transparent" HorizontalAlignment="Stretch" Margin="20 5 10 0">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <ComboBox Grid.Row="0" x:Name="SiteFilter" Style="{StaticResource AddFieldComboBox}" ItemsSource="{Binding Sites, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedItem="{Binding Path=SelectedSite , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTextSearchEnabled="True" DisplayMemberPath="SiteName" IsEnabled="{Binding SiteEnable}" material:HintAssist.Hint="Site Name" material:HintAssist.IsFloating="True" TabIndex="0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectedSiteChangedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBox Grid.Column="0" x:Name="Height" Text="{Binding SelectedSite.SiteHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" material:HintAssist.Hint="Site Height" material:HintAssist.IsFloating="True" Style="{StaticResource AddFieldTextBox}" IsEnabled="False"/>
                            <TextBox Grid.Column="2" x:Name="Width" Text="{Binding SelectedSite.SiteWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" material:HintAssist.Hint="Site Width" material:HintAssist.IsFloating="True" Style="{StaticResource AddFieldTextBox}" IsEnabled="False"/>
                        </Grid>

                        <ComboBox Grid.Row="2" x:Name="ClientFilter" Style="{StaticResource AddFieldComboBox}" ItemsSource="{Binding Clients, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedItem="{Binding Path=SelectedClient , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTextSearchEnabled="True" DisplayMemberPath="ClientName" IsEnabled="{Binding ClientEnable}" material:HintAssist.Hint="Client Name" material:HintAssist.IsFloating="True" TabIndex="1"/>

                        <Grid Grid.Row="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <DatePicker Grid.Column="0" Name="StartDate" Style="{StaticResource AddFieldDatePicker}" SelectedDate="{Binding StartDate, Mode=TwoWay}" DisplayDate="{Binding DisplayStartDate, Mode=TwoWay}" DisplayDateStart="{x:Static sys:DateTime.Today}" FirstDayOfWeek="Monday" IsTabStop="True" material:HintAssist.Hint="Start Date" material:HintAssist.IsFloating="True" IsEnabled="{Binding StartDateEnable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsKeyboardFocusedChanged="StartDate_IsKeyboardFocusedChanged" TabIndex="2">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectedDateChanged">
                                        <i:InvokeCommandAction Command="{Binding StartDateChangedCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </DatePicker>

                            <DatePicker Grid.Column="2" x:Name="EndDate" Style="{StaticResource AddFieldDatePicker}" SelectedDate="{Binding EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayDate="{Binding DisplayEndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FirstDayOfWeek="Monday" DisplayDateStart="{Binding ElementName=StartDate, Path=SelectedDate}" IsEnabled="{Binding EndDateEnable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsTabStop="True" material:HintAssist.Hint="End Date" material:HintAssist.IsFloating="True" IsKeyboardFocusedChanged="EndDate_IsKeyboardFocusedChanged" CalendarOpened="EndDate_CalendarOpened" TabIndex="3">
                                
                            </DatePicker>
                        </Grid>

                        <GroupBox Grid.Row="4" Header="Costing :" Margin="0 10 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Style="{StaticResource AddFieldGroupBox}" HeaderTemplate="{StaticResource AddFieldGroupHeader}">
                            <Grid Margin="0,10,0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="Charges" Grid.Column="0" Text="{Binding Charges, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AmountValidator}}" material:HintAssist.Hint="Costing (Rs.)" material:HintAssist.IsFloating="True" Style="{StaticResource AddFieldTextBox}" IsEnabled="{Binding AmountEnable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TabIndex="4" Margin="10,0"/>
                                <TextBox x:Name="Printing" Grid.Column="1" Text="{Binding Printing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AmountValidator}}" material:HintAssist.Hint="Printing Charges (Rs.)" material:HintAssist.IsFloating="True" Style="{StaticResource AddFieldTextBox}" IsEnabled="{Binding AmountEnable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TabIndex="5"/>
                                <TextBox x:Name="Mounting" Grid.Column="2" Text="{Binding Mounting, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AmountValidator}}" material:HintAssist.Hint="Mounting (Rs.)" material:HintAssist.IsFloating="True" Style="{StaticResource AddFieldTextBox}" IsEnabled="{Binding AmountEnable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TabIndex="6"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </StackPanel>

                <Grid Grid.Row="2">
                    <StackPanel VerticalAlignment="Top" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="Save" Content="{Binding ActionButton}" HorizontalAlignment="Stretch" Margin="10,10,10,0" VerticalAlignment="Center" Command="{Binding SaveCommand}" TabIndex="7">
                            <Button.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding SaveCommand}" />
                            </Button.InputBindings>
                        </Button>
                        <Button x:Name="CloseButton" Content="Close" HorizontalAlignment="Stretch" Margin="10,10,10,0" VerticalAlignment="Center" Command="{Binding CloseCommand}" TabIndex="7">
                            <Button.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding CloseCommand}" />
                            </Button.InputBindings>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid >
        </Border>
    </StackPanel>
</Window>
